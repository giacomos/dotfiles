# Change prefix key from Ctrl+b to Ctrl+a
unbind C-b
set-option -g prefix C-a
set-option -g base-index 1              # start windows numbers from 1 for easier switching (default 0)
set-window-option -g pane-base-index 1  # start panes numbers from 1 for easier switching (default 0)
set-option -g mode-mouse on             # allow dragging to make a selection in copy mode
set-option -g mouse-select-pane on      # make mouse clicks select panes
set-option -g mouse-select-window on    # make mouse clicks select window
set-option -g mouse-resize-pane on      # panes may be resized by dragging their borders (default on)
set-window-option -g mode-keys vi       # mode to use in copy and choice modes (vi/emacs)
set-option -g history-limit 10000       # set scrollback history to 10000 (10k)
set-option -g set-titles on             # try to set xterm window titles
set-option -g set-titles-string '(S:#S - W:#I - P:#P) #W'  # format used by set-titles
set-option -g default-terminal "screen-256color" # default terminal definition string
set-option -g default-shell /bin/zsh    # default shell to use
set-option -g status on                 # show or hide the status bar
set-option -g status-utf8 on            # assume UTF-8 sequences to appear in status bar
set-option -g status-interval 5         # interval (in seconds) for status bar updates (default 15s)
set-option -g status-attr dim
set-option -g status-justify centre     # center window list for clarity
set-window-option -g window-status-attr dim
set-window-option -g window-status-current-attr bright
set-option -g status-left-length 70     # set the length of the left side of the status bar
set-option -g status-right-length 60    # set the length of the right side of the status bar
set-option -g status-left "#[fg=green]TMUX@#h"    # show hostname on the left side of the status bar
set-option -g status-right "#[fg=colour130]session:#S window:#I pane:#P #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \":: vpn \" $2}') "
set-window-option -g monitor-activity on # Notifying if other windows has activities
set-option -g visual-activity on
set-window-option -g clock-mode-style 24   # set clock to 24hh style
set-option -g status-keys vi            # mode to use in status bar modes (vi/emacs)

###########################
# COLOUR (Solarized 256)
###########################
# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default
# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim
# active window title colors
set-window-option -g window-status-current-fg colour232 #orange
set-window-option -g window-status-current-bg colour166
#set-window-option -g window-status-current-attr bright
# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01
# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange
# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour colour64 #green

set-option -g pane-border-fg default
set-option -g pane-active-border-fg colour11
set-option -g pane-active-border-bg colour166

set-option -g display-panes-active-colour colour11
###########################


unbind l # Last active window
bind C-a choose-window

bind r source-file ~/.tmux.conf \; display "Reloaded!"  # reload config file

# Copy mode bindings.
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "xclip -sel clip -i >/dev/null"
bind-key -t vi-copy 'u' page-up
bind-key -t vi-copy 'd' page-down
bind-key -t vi-copy 'V' rectangle-toggle

# More straight forward key bindings for splitting
unbind %
bind | split-window -h # split window horizontally
bind h split-window -h # split window horizontally
unbind '"'
bind - split-window -v # splits window vertically
bind v split-window -v # splits window vertically

bind-key a send-prefix # Allows us to use C-a a <command> to send commands to a TMUX session inside another TMUX session

# Pane
unbind o
#bind C-s down-pane
bind C-s select-pane -D

# screen ^C c
unbind ^C
bind c new-window -c '#{pane_current_path}'

# detach ^D d
unbind ^D
bind ^D detach

unbind *
bind * list-clients

unbind Left
unbind Right
unbind Up
unbind Down
unbind p # do not use this anymore for previous-window
unbind n # do not use this anymore for next-window
unbind ( # do not use this anymore for previous client
unbind ) # do not use this anymore for next client
# fast movement between windows (Ctrl-Fn Left/Ctrl-Fn Right)
# and sessions (Ctrl-Fn Up/Ctrl-Fn Down)
bind -n C-PageUp previous-window
bind -n C-PageDown next-window
bind -n C-Home switch-client -p
bind -n C-End switch-client -n
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D

bind n new-session

unbind ,
bind A command-prompt "rename-window %%"

unbind A
bind A command-prompt "rename-window %%"

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

#unbind BSpace

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

unbind k
bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# More straight forward key bindings for splitting
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
unbind '"'
bind - split-window -v -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# :kB: focus up
unbind Tab
#bind Tab down-pane
#bind Tab select-pane -D
#unbind BTab
#bind BTab select-pane -U

# " windowlist -b
unbind '"'
bind '"' choose-window

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e set-window-option synchronize-panes on
bind E set-window-option synchronize-panes off

# this will create a new session when the server starts so I can always
# use tmux attach. EDIT: moved to .xsession
new-session
